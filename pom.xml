<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gisgraphy</groupId>
	<artifactId>gisgraphy</artifactId>
	<packaging>war</packaging>
	<version>5.0-beta3</version>
	<name>gisgraphy</name>
	<url>https://www.gisgraphy.com</url>

	<prerequisites>
		<maven>2.0.8</maven>
	</prerequisites>

	<description>
   Gisgraphy goal is to provide tools to use free GIS Data on the Web. 
   Actually it manage Geonames and OpenStreetMap (100 million entries).
   it provides an importer to inject the data into a strongly typed Postgres / Postgis database and use them via webservices :
   worldwide geocoding, worldwide reverse geocoding, fulltext and find nearby.
   Results can be output in XML, Atom, RSS, JSON, PHP, Ruby, and Python.
   </description>

	<licenses>
		<license>
			<name>LGPL</name>
			<url>http://www.gnu.org/licenses/lgpl-3.0.html</url>
		</license>
	</licenses>

	<scm>
		<connection></connection>
		<developerConnection></developerConnection>
		<url>https://github.com/gisgraphy/gisgraphy</url>
	</scm>

	<issueManagement>
		<system>Google</system>
		<url>https://github.com/gisgraphy/gisgraphy/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<id>David Masclet</id>
			<name>dmasclet</name>
			<email>davidmasclet at gisgraphy . com</email>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<build>
		<defaultGoal>install</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appfuse-maven-plugin</artifactId>
				<version>${appfuse.version}</version>
				<configuration>
					<genericCore>${amp.genericCore}</genericCore>
					<fullSource>${amp.fullSource}</fullSource>
				</configuration>
				<!-- Dependency needed by appfuse:gen-model to connect to database. -->
				<!-- See http://issues.appfuse.org/browse/APF-868 to learn more.    -->
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.0-beta-2</version>
				<configuration>
					<source>1.5</source>
					<verbose>true</verbose>
					<complianceLevel>1.5</complianceLevel>
					<showWeaveInfo>true</showWeaveInfo>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding> 
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>
							org.springframework.ide.eclipse.core.springnature
						</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>
							org.springframework.ide.eclipse.core.springbuilder
						</buildcommand>
					</additionalBuildcommands>
					<downloadSources>false</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<dependenciesAsLibraries>
						true
					</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
	<version>3.0</version>
	<configuration>
			<hibernate.dialect>
				org.hibernatespatial.postgis.PostgisDialectNG2
			</hibernate.dialect>
			<hibernatetool destdir="./target/sql">
				<hbm2ddl update="false" create="true" drop="${hbm2ddl.drop}" export="${resetdb}" 
					outputfilename="create_tables.sql" format="true" console="true"/>
				<classpath>
					<path location="${project.build.directory}/classes" />
				</classpath>
				<annotationconfiguration configurationfile="src/main/resources/hibernate.cfg.xml" propertyfile="target/classes/jdbc.properties" />
				<!-- <hbm2ddl update="false" create="true" drop="${hbm2ddl.drop}" export="${resetdb}" 
					outputfilename="create_tables.sql" format="true" console="true"/> -->
				<!-- <hbm2ddl update="false" create="true" drop="true" export="true" 
					outputfilename="create_tables.sql" format="true" console="true"/> -->
			</hibernatetool>
			<components>
				<component>
					<name>hbm2ddl</name>
							<implementation>
								annotationconfiguration
							</implementation>
						</component>
					</components>
					<componentProperties>
						<drop>${hbm2ddl.drop}</drop>
						<jdk5>true</jdk5>
						<propertyfile>
							target/classes/jdbc.properties
						</propertyfile>
						 <skip>false</skip>
						 <export>${resetdb}</export>
          				 <update>false</update>
					     <outputfilename>create_tables.sql</outputfilename>
					</componentProperties>
				</configuration>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals>
							<goal>hbm2ddl</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<configuration>
					<dataTypeFactoryName>
						${dbunit.dataTypeFactoryName}
					</dataTypeFactoryName>
					<driver>${driverClassName}</driver>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<url>${jdbc.url}</url>
					<src>src/test/resources/sample-data.xml</src>
					<type>${dbunit.operation.type}</type>
					<schema>${dbunit.schema}</schema>
					<skip>${fill.db.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
					<execution>
						<!-- Runs before integration tests and jetty:run-war -->
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		<!--	<plugin>
     <groupId>org.mortbay.jetty</groupId>
    <artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<contextPath>/</contextPath>
					<scanIntervalSeconds>3</scanIntervalSeconds>
					<scanTargetPatterns>
						<scanTargetPattern>
							<directory>
								src/main/webapp/WEB-INF
							</directory>
							<excludes>
								<exclude>**/*.jsp</exclude>
							</excludes>
							<includes>
								<include>**/*.properties</include>
								<include>**/*.xml</include>
							</includes>
						</scanTargetPattern>
					</scanTargetPatterns>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<dependentWarExcludes>
						**/jdbc.properties,**/hibernate.cfg.xml,**/sql-map-config.xml,**/web.xml,WEB-INF/classes/META-INF/**
					</dependentWarExcludes>
				</configuration>
			</plugin>-->
			<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-war-plugin</artifactId>
    <version>2.1.1</version>
</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				 <dependencies>
                    <dependency>
                        <groupId>com.sun</groupId>
                        <artifactId>tools</artifactId>
                        <version>1.5.0</version>
                        <scope>system</scope>
                        <systemPath>${java.home}/../lib/tools.jar</systemPath>
                    </dependency>
                </dependencies>
				<version>1.0-alpha-1</version>
				<configuration>
					<dest>target/classes</dest>
					<src>src/main/resources</src>
				</configuration>
				<executions>
					<execution>
						<id>native2ascii-utf8</id>
						<goals>
							<goal>native2ascii</goal>
						</goals>
						
						<configuration>
							<encoding>UTF8</encoding>
							<includes>
								ApplicationResources_ko.properties,
								ApplicationResources_no.properties,
								ApplicationResources_tr.properties,
								ApplicationResources_zh*.properties
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>native2ascii-8859_1</id>
						<goals>
							<goal>native2ascii</goal>
						</goals>
						<configuration>
							<encoding>8859_1</encoding>
							<includes>
								ApplicationResources_de.properties,
								ApplicationResources_fr.properties,
								ApplicationResources_nl.properties,
								ApplicationResources_pt*.properties
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
      		        	 <groupId>org.apache.maven.plugins</groupId>
        	        	 <artifactId>maven-site-plugin</artifactId>
        	           	<version>2.2</version>
      	        	</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2-beta-2</version>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
				<!--  <archive>
		            <manifest>
        		      <mainClass>com.gisgraphy.Launch</mainClass>
            		</manifest>
          		</archive>
				 <descriptorRefs>
          				  <descriptorRef>jar-with-dependencies</descriptorRef>
         		 </descriptorRefs>-->
					<descriptors>
						<descriptor>
							src/main/assembly/dist.xml
						</descriptor>
						<descriptor>
							src/main/assembly/dist-src.xml
						</descriptor>
					</descriptors>
					<appendAssemblyId>true</appendAssemblyId>
				</configuration>
			</plugin>
			<!-- aspectJ plugin -->
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<weaveDependencies>
						<weaveDependency>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</weaveDependency>
					</weaveDependencies>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						
						</goals>
					</execution>
				</executions>
			</plugin>-->
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>
						ApplicationResources_de.properties
					</exclude>
					<exclude>
						ApplicationResources_fr.properties
					</exclude>
					<exclude>
						ApplicationResources_ko.properties
					</exclude>
					<exclude>
						ApplicationResources_nl.properties
					</exclude>
					<exclude>
						ApplicationResources_no.properties
					</exclude>
					<exclude>
						ApplicationResources_pt*.properties
					</exclude>
					<exclude>
						ApplicationResources_tr.properties
					</exclude>
					<exclude>
						ApplicationResources_zh*.properties
					</exclude>
					<exclude>applicationContext-resources.xml</exclude>
					<exclude>struts.xml</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>applicationContext-resources.xml</include>
					<include>struts.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			
			<resource>
				<directory>${config.directory}</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/main/webapp/</directory>
				<filtering>false</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											hibernate3-maven-plugin
										</artifactId>
										<versionRange>
											[2.2,)
										</versionRange>
										<goals>
											<goal>hbm2ddl</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											dbunit-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-beta-1,)
										</versionRange>
										<goals>
											<goal>operation</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											native2ascii-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-1,)
										</versionRange>
										<goals>
											<goal>native2ascii</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
	<!--  Our own repository -->
		 <repository>
			<id>gisgraphy</id>
			<url>http://gisgraphy.free.fr/mavenrepo/</url>
		</repository>
		<!-- <repository>
			<id>ibiblio</id>
			<url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
		</repository>-->
		 <repository>
                    <id>OSGEO GeoTools repo</id>
                    <url>http://download.osgeo.org/webdav/geotools</url>
            </repository>
            <repository>
                    <id>Hibernate Spatial repo</id>
                    <url>http://www.hibernatespatial.org/repository</url>
            </repository>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<!-- Stuff such as Java/J2EE APIs, etc.. -->
		<!-- <repository>
			<id>jboss.repository</id>
			<name>Jboss Repository for Maven</name>
			<url>http://repository.jboss.com/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>-->
		<!-- People Apache Repo : ActiveMQ.. -->
		<!-- <repository>
			<id>apache-incubating</id>
			<name>Apache Incubating Repository</name>
			<url>
				http://people.apache.org/repo/m2-incubating-repository
			</url>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>-->
		<!--<repository>
			<id>codehaus</id>
			<url>http://repository.codehaus.org</url>
		</repository>-->
		<!-- <repository>
			<id>javanet</id>
			<url>https://maven-repository.dev.java.net/repository/</url>
		</repository>
		<repository>
			<id>javanetdl</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>appfuse</id>
			<url>http://static.appfuse.org/repository</url>
		</repository>-->
		<!-- for cxf purpose -->
		<!-- <repository>
			<id>codehaus-release-repo</id>
			<name>Codehaus Release Repo</name>
			<url>http://repository.codehaus.org</url>
		</repository>-->
		<!-- for jaxb-impl -->
		<!-- <repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/1/</url>
			<layout>legacy</layout>
		</repository>-->
	</repositories>
	<pluginRepositories>
		<!-- <pluginRepository>
			<id>appfuse</id>
			<url>http://static.appfuse.org/repository</url>
		</pluginRepository>-->
	</pluginRepositories>
	<!-- Dependencies calculated by AppFuse when running full-source plugin -->
	<dependencies>
	<dependency>
	<groupId>com.gisgraphy</groupId>
	<artifactId>gisgraphy-commons</artifactId>
	<version>5.0-beta3</version>
	</dependency>
		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>-->
		<!-- cglib -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.1_3</version>
		</dependency>
		<!-- end cglib -->
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts</artifactId>
			<version>1.13</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons.beanutils.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
		<dependency>
			<groupId>com.gisgraphy</groupId>
			<artifactId>universalserialiser</artifactId>
			<version>5.0</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons.dbcp.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-io</artifactId>
					<groupId>commons-io</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
  			<groupId>org.apache.commons</groupId>
  			<artifactId>commons-compress</artifactId>
  			<version>1.21</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-vfs</groupId>
			<artifactId>commons-vfs</artifactId>
			<version>20050307052300</version>
		</dependency>
		<dependency>
			<groupId>displaytag</groupId>
			<artifactId>displaytag</artifactId>
			<version>${displaytag.version}</version>
			<!-- <exclusions>
			
			</exclusions>-->
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl104-over-slf4j</artifactId>
			</exclusion>
			<exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			</exclusion>
			</exclusions>
		</dependency>
		<dependency>
    <groupId>org.hibernatespatial</groupId>
    <artifactId>hibernate-spatial</artifactId>
    <version>1.1.1</version>
</dependency>
<dependency>
    <groupId>org.hibernatespatial</groupId>
    <artifactId>hibernate-spatial-postgis</artifactId>
    <version>1.1.1</version>
</dependency>
		<!-- <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>${hibernate-spatial.version}</version>
		</dependency>
		 <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-spatial-${gisProvider}</artifactId>
			<version>{hibernate-spatial.version}</version>
		</dependency>-->
		<!-- solr and lucene and jsp -->
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.7.0</version>
		</dependency>
		<!-- dependency>
			<groupId>org.apache.jasper</groupId>
			<artifactId>jasper</artifactId>
			<version>3.3.2</version>
			</dependency-->
		<!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-jsp -->

		<dependency>
		<groupId>org.reflections</groupId>
		<artifactId>reflections</artifactId>
		<version>0.9.9-RC1</version>
	   </dependency>
		<dependency>
		<groupId>org.easymock</groupId>
		<artifactId>easymock</artifactId>
		<version>3.0</version>
		<scope>test</scope>
	   </dependency>
	   
	<!--    <dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
    <version>${slf4j.version}</version>
</dependency>
	   <dependency>
	<groupId>org.slf4j</groupId>
	<artifactId>slf4j-log4j12</artifactId>
	 <version>${slf4j.version}</version>
</dependency>
   <dependency>
	<groupId>org.slf4j</groupId>
	<artifactId>jcl-over-slf4j</artifactId>
	 <version>${slf4j.version}</version>
</dependency>
-->

<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-log4j12</artifactId>
    <version>${slf4j.version}</version>
</dependency>
	   <!-- JETTY -->
	  <!--  		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>-->
		<!-- <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>>-->
	<!-- <dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-jsp</artifactId>
		<version>8.1.1.v20120215</version>
		<scope>test</scope>
	</dependency>-->
	  <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.0.1</version>
        <scope>compile</scope>
    </dependency>
     <!--  <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>3.0-alpha-1</version>
        <scope>compile</scope>
    </dependency>-->
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>test-jetty-servlet</artifactId>
		<version>${jetty.version}</version>
		<scope>test</scope>
	</dependency>
	
	
	
			<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	 <dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-server</artifactId>
		<version>${jetty.version}</version>
		<scope>test</scope>
		<exclusions>
			<exclusion>
				<artifactId>servlet-api</artifactId>
				<groupId>org.mortbay.jetty</groupId>
			</exclusion>
		</exclusions>
	</dependency>
		<!-- Solr-Client for Java -->
		  <dependency>
               <groupId>org.apache.solr</groupId>
               <artifactId>solr-solrj</artifactId>
               <version>${solr.version}</version>
               <type>jar</type>
               <exclusions>
			<exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			</exclusion>
			<exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			</exclusion>
			</exclusions>
        </dependency>
		
		
		<!-- XML Pull Parser for Solr-->
		<dependency>
			<groupId>xpp3</groupId>
			<artifactId>xpp3</artifactId>
			<version>1.1.3.4</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>${javamail.version}</version>
		</dependency>
		<dependency>
			<groupId>	org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>${jpa.version}</version>
		</dependency>
		<dependency>
			<groupId>jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>${jmock.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<!-- <optional>true</optional>-->
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>clickstream</artifactId>
			<version>${clickstream.version}</version>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>oscache</artifactId>
			<version>${oscache.version}</version>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>${sitemesh.version}</version>
		</dependency>
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>0.9</version>
		</dependency>

		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome-modules</artifactId>
			<version>0.2</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j-charsets</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.2.1</version>
			<classifier>jdk15</classifier>
		</dependency>
		<dependency>
			<groupId>net.sf.jstester</groupId>
			<artifactId>jstester</artifactId>
			<version>1.4</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>
		<!-- Jersey/cxf REST Framework -->
		<!--dependency needed by both CXF and jersey-->
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.1-1</version>
			<exclusions>
				<exclusion>
					<groupId>javax.jws</groupId>
					<artifactId>jsr181</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- This should replace jsr181 which 
			is missing in javax.jws.jsr181  -->
		<!-- <dependency>
			<groupId>xfire</groupId>
			<artifactId>xfire-jsr181-api</artifactId>
			<version>1.0-M1</version>
		</dependency>-->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.0-RC1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jra</groupId>
			<artifactId>jra</artifactId>
			<version>1.0-alpha-4</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<!-- <version>2.1.6</version>-->
			<version>2.0.5</version>
		</dependency>
		
		<dependency>
			<groupId>wadl</groupId>
			<artifactId>wadl2java</artifactId>
			<version>1.0.0</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>${struts.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-codebehind-plugin</artifactId>
			<version>${struts.version}</version>
			
		</dependency>
		<!--  ************************************** -->
		<!--  Templating Engines -->
		<!--  ************************************** -->
		
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
			<version>${struts.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>spring-beans</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-context</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-core</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-web</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency>
			<groupId>org.codehaus.xfire</groupId>
			<artifactId>xfire-java5</artifactId>
			<version>${xfire.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-attributes-api</artifactId>
					<groupId>commons-attributes</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jaxen</artifactId>
					<groupId>jaxen</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xmlParserAPIs</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>XmlSchema</artifactId>
					<groupId>org.apache.ws.commons</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		 <dependency>
			<groupId>org.codehaus.xfire</groupId>
			<artifactId>xfire-spring</artifactId>
			<version>${xfire.version}</version>
		</dependency>-->
		<dependency>
			<groupId>org.directwebremoting</groupId>
			<artifactId>dwr</artifactId>
			<version>${dwr.version}</version>
		</dependency>
			<dependency>
<groupId>org.hibernate</groupId>
<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			
			<exclusions>
				<exclusion>
					<artifactId>ehcache</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-collections</artifactId>
					<groupId>commons-collections</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-ehcache</artifactId>
    <version>${hibernate.version}</version>
    <exclusions>
    </exclusions>
		</dependency>
	<!-- 	<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>${hibernate.annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>${hibernate.annotations.version}</version>
		</dependency>-->
<dependency> 
     <groupId>org.springframework</groupId> 
     <artifactId>spring-aspects</artifactId> 
     <version>${spring.version}</version> 
</dependency>
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-jdbc</artifactId>
    <version>${spring.version}</version>
</dependency>
		<!-- <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>-->
		<!-- <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>avalon-framework</artifactId>
					<groupId>avalon-framework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>logkit</artifactId>
					<groupId>logkit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>-->
		<dependency>
 		 <groupId>org.springframework</groupId>
  			<artifactId>spring-aspects</artifactId>
  			<version>${spring.version}</version>
  			<exclusions>
  			<exclusion>
  			<groupId>org.aspectj</groupId>
  			<artifactId>aspectjweaver</artifactId>
  			</exclusion>
				<exclusion>
					<artifactId>spring-beans</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-core</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-framework-bom</artifactId>
    <version>${spring.version}</version>
    <type>pom</type>
    <scope>import</scope>
</dependency>
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-core</artifactId>
    <version>${spring.security.version}</version>
    <exclusions>
        <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-support</artifactId>
        </exclusion>
    </exclusions>
</dependency>
<dependency>
	<groupId>org.springframework.security</groupId>
	<artifactId>spring-security-config</artifactId>
	<version>${spring.security.version}</version>
</dependency>
 <dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-taglibs</artifactId>
    <version>${spring.security.version}</version>
    <exclusions>
        <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </exclusion>
    </exclusions>
</dependency>


<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-beans</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-context</artifactId>
  <version>${spring.version}</version>
 <!--  <exclusions>
  <exclusion>
					<artifactId>spring-aop</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
  </exclusions>-->
  
</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-context-support</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-tx</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
<groupId>org.springframework</groupId>
	<artifactId>spring-test</artifactId>
	<version>${spring.version}</version>
	</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-orm</artifactId>
  <version>${spring.version}</version>
</dependency>
<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-web</artifactId>
  <version>${spring.version}</version>
  <exclusions>
  <exclusion>
  <artifactId>spring-aop</artifactId>
  <groupId>org.springframework</groupId>
  </exclusion>
  </exclusions>
</dependency>
<dependency><artifactId>aopalliance</artifactId><groupId>aopalliance</groupId><version>1.0</version></dependency>
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp-wiser</artifactId>
			<version>${wiser.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>${urlrewrite.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>ant</artifactId>
					<groupId>ant</groupId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgis-jdbc-extensions</artifactId>
			<version>1.1.2-1</version>
		</dependency>
		<dependency>
			<groupId>struts-menu</groupId>
			<artifactId>struts-menu</artifactId>
			<version>${struts.menu.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
				<exclusion>
					<artifactId>velocity</artifactId>
					<groupId>velocity</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>com.gisgraphy</groupId>
			<artifactId>gisgraphy-utils</artifactId>
			<version>5.0-beta3</version>
			 <exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
		 <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <artifactItems>
            <artifactItem>
              <groupId>[ groupId ]</groupId>
              <artifactId>[ artifactId ]</artifactId>
              <version>[ version ]</version>
              <type>[ packaging ]</type>
                          <classifier> [classifier - optional] </classifier>
              <overWrite>[ true or false ]</overWrite>
              <outputDirectory>[ output directory ]</outputDirectory>
              <destFileName>[ filename ]</destFileName>
            </artifactItem>
          </artifactItems>
          <!-- other configurations here -->
        </configuration>
      </plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!--<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				</plugin>-->
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.0</version>
				</plugin>
			-->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.0</version>
				<!-- need 2.0, if greater the report fails -->
			</plugin>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<linkXref>true</linkXref>
					<targetJdk>1.5</targetJdk>
				</configuration>
			</plugin>
			<!-- <plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>-->
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>import</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/gisgraphy]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password></jdbc.password>
				<config.directory>
					${basedir}/etc/import
				</config.directory>
				<resetdb>true</resetdb>
				<hbm2ddl.drop>true</hbm2ddl.drop>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<config.directory>${basedir}/etc/prod</config.directory>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/gisgraphy]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password></jdbc.password>
				<maven.test.skip>true</maven.test.skip>
				<resetdb>false</resetdb>
				<hbm2ddl.drop>false</hbm2ddl.drop>
				<fill.db.skip>true</fill.db.skip>
			</properties>
		</profile>
		<profile>
			<id>gisgraphy</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
			 <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-core</artifactId>
                <version>1.31.0</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>1.3.1</version>
            </dependency>
            <dependency>
                <groupId>org.jrobin</groupId>
                <artifactId>jrobin</artifactId>
                <version>1.5.9</version>
               </dependency>			
			</dependencies>
			<properties>
				<config.directory>${basedir}/etc/gisgraphy</config.directory>
				<jdbc.url><![CDATA[jdbc:postgresql://127.0.0.1/gisgraphy]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password></jdbc.password>
				<maven.test.skip>true</maven.test.skip>
				<resetdb>false</resetdb>
				<hbm2ddl.drop>false</hbm2ddl.drop>
				<fill.db.skip>true</fill.db.skip>
				<GisgraphyMessage></GisgraphyMessage>
			</properties>
		</profile>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<config.directory>
					${basedir}/etc/import
				</config.directory>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/gisgraphy]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password>mdppostgres</jdbc.password>
				<maven.test.skip>true</maven.test.skip>
				<resetdb>false</resetdb>
				<hbm2ddl.drop>false</hbm2ddl.drop>
				<fill.db.skip>false</fill.db.skip>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<activation>
				<property>
					<name>!maven.test.skip</name>
				</property>
			</activation>
			<build>
				 <plugins>
				<!--	<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>0.3</version>
						<configuration>
							<wait>${cargo.wait}</wait>
							<container>
								<containerId>
									${cargo.container}
								</containerId>
								<home>${cargo.container.home}</home
								<zipUrlInstaller>
									<url>${cargo.container.url}</url>
									<installDir>
										${installDir}
									</installDir>
								</zipUrlInstaller>
							</container>
							<configuration>
								<home>
									${project.build.directory}/${cargo.container}/container
								</home>
								<properties>
									<cargo.hostname>
										${cargo.host}
									</cargo.hostname>
									<cargo.servlet.port>
										${cargo.port}
									</cargo.servlet.port>
								</properties>
							</configuration>
						</configuration>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>-->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<configuration>
							<tasks>
								<taskdef
									resource="webtest_base_relaxed.taskdef">
									<classpath
										refid="maven.test.classpath" />
								</taskdef>
								<mkdir dir="target/webtest-data" />
								<!-- Delete old results file if it exists -->
								<delete
									file="target/webtest-data/web-tests-result.xml" />
								<!-- This is so the default will be used if no test case is specified -->
								<property name="test"
									value="run-all-tests" />
								<echo level="info">
									Testing '${project.build.finalName}'
									with locale '${user.language}'
								</echo>
								<ant
									antfile="src/test/resources/web-tests.xml" target="${test}">
									<property name="user.language"
										value="${user.language}" />
									<property name="webapp.name"
										value="${project.build.finalName}" />
									<property name="host"
										value="${cargo.host}" />
									<property name="port"
										value="${cargo.port}" />
								</ant>
							</tasks>
						</configuration>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.canoo.webtest</groupId>
								<artifactId>webtest</artifactId>
								<version>${webtest.version}</version>
								<!-- groovy-all doesn't have a pom in central repo -->
								<!-- exclude groovy to prevent trying to fetch pom -->
								<exclusions>
									<exclusion>
										<groupId>groovy</groupId>
										<artifactId>
											groovy-all
										</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>



		<!-- ================= Database Profiles ================= -->
		<profile>
			<id>oracle</id>
			<properties>
				<dbunit.dataTypeFactoryName>
					org.dbunit.ext.oracle.OracleDataTypeFactory
				</dbunit.dataTypeFactoryName>
				<dbunit.schema>SYSTEM</dbunit.schema><!-- Make sure to capitalize the schema name -->
				<hibernate.dialect>
					org.hibernatespatial.oracle.OracleSpatial10gDialect
				</hibernate.dialect>
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.version>10.2.0.2.0</jdbc.version>
				<driverClassName>
					oracle.jdbc.OracleDriver
				</driverClassName>
				<jdbc.url><![CDATA[jdbc:oracle:thin:@localhost:1521:XE]]></jdbc.url>
				<jdbc.username>system</jdbc.username>
				<jdbc.password>system</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>mysqlsql</id>
			<properties>
				<hibernate.dialect>
					org.hibernate.dialect.MySQLInnoDBDialect
				</hibernate.dialect>
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.0.5</jdbc.version>
				<driverClassName>
					com.mysql.jdbc.Driver
				</driverClassName>
				<jdbc.url><![CDATA[jdbc:mysql://localhost/gisgraphy?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
				<jdbc.username>root</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>postgis</id>
			<properties>

			</properties>
		</profile>
		<profile>
			<id>postgistest</id>
			<properties>
				<hibernate.dialect>
					org.hibernatespatial.postgis.PostgisDialectNG2
				</hibernate.dialect>
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>8.1-407.jdbc3</jdbc.version>
				<driverClassName>
					org.postgresql.Driver
				</driverClassName>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/gisgraphy_tests]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password>mdppostgres</jdbc.password>
			</properties>
		</profile>
		<!-- ================= Container Profiles ================= -->
		<profile>
			<id>jboss</id>
			<properties>
				<cargo.container>jboss4x</cargo.container>
				<cargo.container.home>
					${env.JBOSS_HOME}
				</cargo.container.home>
				<cargo.container.url>
					http://easynews.dl.sourceforge.net/sourceforge/jboss/jboss-4.0.5.GA.zip
				</cargo.container.url>
			</properties>
		</profile>
	</profiles>

	<properties>
		<!-- Application settings -->
		<copyright.year>2018</copyright.year>
		<dao.framework>hibernate</dao.framework>
		<web.framework>struts</web.framework>
		<amp.genericCore>true</amp.genericCore>
		<amp.fullSource>true</amp.fullSource>

		<!-- Framework dependency versions -->
		<appfuse.version>2.0</appfuse.version>
		<spring.version>4.3.5.RELEASE</spring.version><!-- 3.2.1.RELEASE 4.0.1.RELEASE-->
		<spring.security.version>4.2.2.RELEASE</spring.security.version>

		<!-- Testing dependency versions -->
		<jmock.version>1.1.0</jmock.version>
		<jsp.version>2.0</jsp.version>
		<junit.version>4.12</junit.version>
		<servlet.version>2.5</servlet.version>
		<wiser.version>1.2</wiser.version>

		<!-- WebTest dependency versions  -->
		<webtest.version>R_1600</webtest.version>

		<!-- Cargo settings -->
		<cargo.container>tomcat5x</cargo.container>
		<cargo.container.home>
			${env.CATALINA_HOME}
		</cargo.container.home>
		<cargo.container.url>
			http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.14/bin/apache-tomcat-6.0.14.zip
		</cargo.container.url>
		<cargo.host>localhost</cargo.host>
		<cargo.port>8081</cargo.port>
		<cargo.wait>false</cargo.wait>

		<!-- Database settings -->
		<dbunit.dataTypeFactoryName>
			org.dbunit.dataset.datatype.DefaultDataTypeFactory
		</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<config.directory>${basedir}/src/main/resources</config.directory>

		<hibernate.dialect>
			org.hibernatespatial.postgis.PostgisDialectNG2
		</hibernate.dialect>
		<jdbc.groupId>postgresql</jdbc.groupId>
		<jdbc.artifactId>postgresql</jdbc.artifactId>
		<!-- http://confluence.atlassian.com/display/KB/CSP-17478+-++Error+connecting+to+a+Postgres+dabatase+when+converting+Confluence+default+database+to+PG -->
		<!--<jdbc.version>8.3-603.jdbc3</jdbc.version>-->
		<jdbc.version>8.1-407.jdbc3</jdbc.version>
		<driverClassName>
			org.postgresql.Driver
		</driverClassName>
		<jdbc.url><![CDATA[jdbc:postgresql://localhost/gisgraphy]]></jdbc.url>
		<resetdb>true</resetdb>
		<hbm2ddl.drop>true</hbm2ddl.drop>
		<jdbc.username>postgres</jdbc.username>
		<jdbc.password>mdppostgres</jdbc.password>

		<!-- Properties calculated by AppFuse when running full-source plugin -->
		 <aspectj.version>1.5.2a</aspectj.version>
		<!--<aspectj.version>1.6.1</aspectj.version>-->
		<lucene.version>2.3.1</lucene.version>
		<jetty.version>8.1.0.RC5</jetty.version><!-- 8.1.0.RC5  8.1.20.v20160902-->
		<clickstream.version>1.0.2</clickstream.version>
		<commons.beanutils.version>1.7.0</commons.beanutils.version>
		<commons.collections.version>3.2.2</commons.collections.version>
		<commons.dbcp.version>1.2.2</commons.dbcp.version>
		<commons.fileupload.version>1.1.1</commons.fileupload.version>
		<commons.io.version>1.3.2</commons.io.version>
		<commons.lang.version>2.3</commons.lang.version>
		<displaytag.version>1.1.1</displaytag.version>
		<dwr.version>2.0.1</dwr.version>
		<ehcache.version>1.3.0</ehcache.version>
		<solr.version>3.6.0</solr.version>
		
		<slf4j.version>1.6.1</slf4j.version>
		<hibernate.annotations.version>3.3.0.ga</hibernate.annotations.version>
		<hibernate.version>3.6.6.Final </hibernate.version>
		<hibernate-spatial.version>1.1.1</hibernate-spatial.version>
		
		
		<javamail.version>1.4</javamail.version>
		<jpa.version>1.0.1.Final</jpa.version>
		<jstl.version>1.1.2</jstl.version>
		<log4j.version>1.2.13</log4j.version>
		<oscache.version>2.3</oscache.version>
		<sitemesh.version>2.3</sitemesh.version>
		<struts.menu.version>2.4.3</struts.menu.version>
		<struts.version>2.1.8</struts.version>
		<urlrewrite.version>3.0.4</urlrewrite.version>
		<velocity.version>1.6.4</velocity.version>
		<xfire.version>1.2.6</xfire.version>
		<gisProvider>postgis</gisProvider>
		<fill.db.skip>false</fill.db.skip>
		<GisgraphyMessage></GisgraphyMessage>
	</properties>
</project>
